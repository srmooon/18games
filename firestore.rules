rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Funções auxiliares
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Regras para estatísticas
    match /statistics/{docId} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }

    // Regras para a coleção posts
    match /posts/{postId} {
      allow read: if true;
      allow create: if isAuthenticated() 
        && request.resource.data.userId == request.auth.uid
        && request.resource.data.keys().hasAll(['title', 'description', 'mainImage', 'userId', 'createdAt'])
        && request.resource.data.title is string
        && request.resource.data.description is string;
      allow update, delete: if isAuthenticated() && (isOwner(resource.data.userId) || isAdmin());
    }

    // Regras para perfis de usuário
    match /users/{userId} {
      allow read: if true;
      allow create, update: if isAuthenticated() && (isOwner(userId) || isAdmin());
      allow delete: if isAdmin();
    }
  }
}
